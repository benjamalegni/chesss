{"ast":null,"code":"import Referee from \"../Referee\";\nexport const kingMove = (initialPosition, desiredPosition, team, dx, dy, stepX, stepY, boardState) => {\n  //one tile movement\n  if (Math.abs(dx) <= 1 && Math.abs(dy) <= 1) {\n    return !Referee.tileIsOccupied(desiredPosition, boardState) || Referee.tileIsOccupiedByOpponent(desiredPosition, boardState, team);\n  }\n  return false;\n};","map":{"version":3,"names":["Referee","kingMove","initialPosition","desiredPosition","team","dx","dy","stepX","stepY","boardState","Math","abs","tileIsOccupied","tileIsOccupiedByOpponent"],"sources":["/home/Outer/Documents/chesss/src/referee/rules/KingRules.ts"],"sourcesContent":["import { Piece, Position, TeamType } from \"../../Constants\";\nimport Referee from \"../Referee\"\n\nexport const kingMove=(initialPosition:Position, desiredPosition: Position, team:TeamType,dx:number, dy:number, stepX:number, stepY:number, boardState:Piece[]):boolean=>{\n            //one tile movement\n            if (Math.abs(dx) <= 1 && Math.abs(dy) <= 1){\n                return (!Referee.tileIsOccupied(desiredPosition, boardState) || Referee.tileIsOccupiedByOpponent(desiredPosition, boardState, team));\n            }\n        return false;\n}"],"mappings":"AACA,OAAOA,OAAO,MAAM,YAAY;AAEhC,OAAO,MAAMC,QAAQ,GAACA,CAACC,eAAwB,EAAEC,eAAyB,EAAEC,IAAa,EAACC,EAAS,EAAEC,EAAS,EAAEC,KAAY,EAAEC,KAAY,EAAEC,UAAkB,KAAW;EAC7J;EACA,IAAIC,IAAI,CAACC,GAAG,CAACN,EAAE,CAAC,IAAI,CAAC,IAAIK,IAAI,CAACC,GAAG,CAACL,EAAE,CAAC,IAAI,CAAC,EAAC;IACvC,OAAQ,CAACN,OAAO,CAACY,cAAc,CAACT,eAAe,EAAEM,UAAU,CAAC,IAAIT,OAAO,CAACa,wBAAwB,CAACV,eAAe,EAAEM,UAAU,EAAEL,IAAI,CAAC;EACvI;EACJ,OAAO,KAAK;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}