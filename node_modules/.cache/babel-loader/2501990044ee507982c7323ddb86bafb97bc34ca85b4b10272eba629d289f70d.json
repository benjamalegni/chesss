{"ast":null,"code":"import Referee from\"../Referee\";export const knightMove=(initialPosition,desiredPosition,team,dx,dy,boardState)=>{// moving mechanics\n// 8 different tiles possible\nconst knightX=[1,2,2,1,-1,-2,-2,-1];const knightY=[2,1,-1,-2,-2,-1,1,2];for(let i=0;i<8;i++){if(dx===knightX[i]&&dy===knightY[i]){return!Referee.tileIsOccupied(desiredPosition,boardState)||Referee.tileIsOccupiedByOpponent(desiredPosition,boardState,team);}}return false;};","map":{"version":3,"names":["Referee","knightMove","initialPosition","desiredPosition","team","dx","dy","boardState","knightX","knightY","i","tileIsOccupied","tileIsOccupiedByOpponent"],"sources":["/home/outer/Documents/chesss/src/referee/rules/KnightRules.ts"],"sourcesContent":["import { Piece, Position, TeamType } from \"../../Constants\";\nimport Referee from \"../Referee\"\n\nexport const knightMove =(initialPosition: Position, desiredPosition: Position, team: TeamType, dx: number, dy: number, boardState: Piece[]):boolean=>{\n        // moving mechanics\n        // 8 different tiles possible\n\n        const knightX = [1, 2, 2, 1, -1, -2, -2, -1];\n        const knightY = [2, 1, -1, -2, -2, -1, 1, 2];\n\n        for (let i = 0; i < 8; i++) {\n            if ((dx === knightX[i]) && (dy === knightY[i])) {\n                return (!Referee.tileIsOccupied(desiredPosition, boardState) || Referee.tileIsOccupiedByOpponent(desiredPosition, boardState, team))\n            }\n        }\n        return false;\n}\n"],"mappings":"AACA,MAAO,CAAAA,OAAO,KAAM,YAAY,CAEhC,MAAO,MAAM,CAAAC,UAAU,CAAEA,CAACC,eAAyB,CAAEC,eAAyB,CAAEC,IAAc,CAAEC,EAAU,CAAEC,EAAU,CAAEC,UAAmB,GAAW,CAC9I;AACA;AAEA,KAAM,CAAAC,OAAO,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5C,KAAM,CAAAC,OAAO,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE5C,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACxB,GAAKL,EAAE,GAAKG,OAAO,CAACE,CAAC,CAAC,EAAMJ,EAAE,GAAKG,OAAO,CAACC,CAAC,CAAE,CAAE,CAC5C,MAAQ,CAACV,OAAO,CAACW,cAAc,CAACR,eAAe,CAAEI,UAAU,CAAC,EAAIP,OAAO,CAACY,wBAAwB,CAACT,eAAe,CAAEI,UAAU,CAAEH,IAAI,CAAC,CACvI,CACJ,CACA,MAAO,MAAK,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}