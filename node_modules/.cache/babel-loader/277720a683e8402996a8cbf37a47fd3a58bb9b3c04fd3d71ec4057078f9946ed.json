{"ast":null,"code":"import Chessboard from\"../Chessboard/Chessboard\";import\"./GameComps.css\";import LoginComponent from\"../../Login/LoginComponent\";import{useMemo,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function GameComps(){const[socket,setSocket]=useState(null);const[status,setStatus]=useState(\"offline\");const[roomId,setRoomId]=useState(null);const[myColor,setMyColor]=useState(null);const[joinCode,setJoinCode]=useState(\"\");function ensureSocket(){if(socket&&(status===\"waiting\"||status===\"playing\"))return socket;const s=new WebSocket(\"ws://localhost:8080\");s.onmessage=ev=>{try{const msg=JSON.parse(ev.data);if(msg.type===\"waiting\"){setStatus(\"waiting\");setRoomId(msg.roomId);}else if(msg.type===\"start\"){setStatus(\"playing\");setRoomId(msg.roomId);setMyColor(msg.color===\"white\"?\"white\":\"black\");}else if(msg.type===\"opponent_left\"){setStatus(\"offline\");setRoomId(null);setMyColor(null);try{s.close();}catch{}}else if(msg.type===\"room_created\"){setStatus(\"waiting\");setRoomId(msg.roomId);}else if(msg.type===\"error\"){alert(msg.error||\"Error\");}}catch(_e){// ignore malformed messages\n}};s.onclose=()=>{setStatus(\"offline\");setRoomId(null);setMyColor(null);setSocket(null);};setSocket(s);return s;}function connectAnd(mode){const s=ensureSocket();s.onopen=()=>{s.send(JSON.stringify({type:mode}));};}function createGame(){connectAnd(\"create\");}function findMatch(){connectAnd(\"find\");}function createPrivateRoom(){const s=ensureSocket();if(s.readyState===WebSocket.OPEN){s.send(JSON.stringify({type:'create_room'}));}else{s.onopen=()=>s.send(JSON.stringify({type:'create_room'}));}}function joinPrivateRoom(){const code=joinCode.trim();if(!code)return;const s=ensureSocket();const payload=JSON.stringify({type:'join_room',roomId:code});if(s.readyState===WebSocket.OPEN){s.send(payload);}else{s.onopen=()=>s.send(payload);}}function disconnect(){try{socket===null||socket===void 0?void 0:socket.close();}catch{}setStatus(\"offline\");setRoomId(null);setMyColor(null);setSocket(null);}const online=useMemo(()=>({socket,status,roomId:roomId!==null&&roomId!==void 0?roomId:undefined,myColor:myColor!==null&&myColor!==void 0?myColor:undefined}),[socket,status,roomId,myColor]);return/*#__PURE__*/_jsxs(\"div\",{id:\"component\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"online-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:createGame,disabled:status===\"waiting\"||status===\"playing\",children:\"Create Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:findMatch,disabled:status===\"waiting\"||status===\"playing\",children:\"Find Match\"}),/*#__PURE__*/_jsx(\"span\",{style:{margin:'0 8px'},children:\"|\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createPrivateRoom,disabled:status===\"waiting\"||status===\"playing\",children:\"Create Room (code)\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Enter room code\",value:joinCode,onChange:e=>setJoinCode(e.target.value),disabled:status===\"waiting\"||status===\"playing\",style:{marginLeft:8}}),/*#__PURE__*/_jsx(\"button\",{onClick:joinPrivateRoom,disabled:status===\"waiting\"||status===\"playing\"||!joinCode.trim(),children:\"Join Room\"}),status===\"waiting\"&&/*#__PURE__*/_jsxs(\"span\",{className:\"hint\",children:[\"Waiting for opponent... Room: \",roomId]}),status===\"playing\"&&/*#__PURE__*/_jsxs(\"span\",{className:\"hint\",children:[\"Room: \",roomId,\" | You are \",myColor]}),(status===\"waiting\"||status===\"playing\")&&/*#__PURE__*/_jsx(\"button\",{onClick:disconnect,children:\"Disconnect\"})]}),/*#__PURE__*/_jsx(LoginComponent,{}),/*#__PURE__*/_jsx(Chessboard,{online:online})]});}export default GameComps;","map":{"version":3,"names":["Chessboard","LoginComponent","useMemo","useState","jsx","_jsx","jsxs","_jsxs","GameComps","socket","setSocket","status","setStatus","roomId","setRoomId","myColor","setMyColor","joinCode","setJoinCode","ensureSocket","s","WebSocket","onmessage","ev","msg","JSON","parse","data","type","color","close","alert","error","_e","onclose","connectAnd","mode","onopen","send","stringify","createGame","findMatch","createPrivateRoom","readyState","OPEN","joinPrivateRoom","code","trim","payload","disconnect","online","undefined","id","children","onClick","disabled","style","margin","placeholder","value","onChange","e","target","marginLeft","className"],"sources":["/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx"],"sourcesContent":["import Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\"\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\n\nfunction GameComps(){\n    const [socket, setSocket] = useState<WebSocket | null>(null);\n    const [status, setStatus] = useState<\"offline\" | \"waiting\" | \"playing\">(\"offline\");\n    const [roomId, setRoomId] = useState<string | null>(null);\n    const [myColor, setMyColor] = useState<\"white\" | \"black\" | null>(null);\n    const [joinCode, setJoinCode] = useState<string>(\"\");\n\n    function ensureSocket(): WebSocket{\n        if(socket && (status === \"waiting\" || status === \"playing\")) return socket;\n        const s = new WebSocket(\"ws://localhost:8080\");\n        s.onmessage = (ev: MessageEvent) => {\n            try{\n                const msg = JSON.parse(ev.data);\n                if(msg.type === \"waiting\"){\n                    setStatus(\"waiting\");\n                    setRoomId(msg.roomId);\n                } else if(msg.type === \"start\"){\n                    setStatus(\"playing\");\n                    setRoomId(msg.roomId);\n                    setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n                } else if(msg.type === \"opponent_left\"){\n                    setStatus(\"offline\");\n                    setRoomId(null);\n                    setMyColor(null);\n                    try{ s.close(); } catch {}\n                } else if(msg.type === \"room_created\"){\n                    setStatus(\"waiting\");\n                    setRoomId(msg.roomId);\n                } else if(msg.type === \"error\"){\n                    alert(msg.error || \"Error\");\n                }\n            }catch(_e){\n                // ignore malformed messages\n            }\n        };\n        s.onclose = () => {\n            setStatus(\"offline\");\n            setRoomId(null);\n            setMyColor(null);\n            setSocket(null);\n        };\n        setSocket(s);\n        return s;\n    }\n\n    function connectAnd(mode: \"create\" | \"find\"){        \n        const s = ensureSocket();\n        s.onopen = () => {\n            s.send(JSON.stringify({ type: mode }));\n        };\n    }\n\n    function createGame(){\n        connectAnd(\"create\");\n    }\n\n    function findMatch(){\n        connectAnd(\"find\");\n    }\n\n    function createPrivateRoom(){\n        const s = ensureSocket();\n        if(s.readyState === WebSocket.OPEN){\n            s.send(JSON.stringify({ type: 'create_room' }));\n        } else {\n            s.onopen = () => s.send(JSON.stringify({ type: 'create_room' }));\n        }\n    }\n\n    function joinPrivateRoom(){\n        const code = joinCode.trim();\n        if(!code) return;\n        const s = ensureSocket();\n        const payload = JSON.stringify({ type: 'join_room', roomId: code });\n        if(s.readyState === WebSocket.OPEN){\n            s.send(payload);\n        } else {\n            s.onopen = () => s.send(payload);\n        }\n    }\n\n    function disconnect(){\n        try{ socket?.close(); } catch {}\n        setStatus(\"offline\");\n        setRoomId(null);\n        setMyColor(null);\n        setSocket(null);\n    }\n\n    const online = useMemo(() => ({\n        socket,\n        status,\n        roomId: roomId ?? undefined,\n        myColor: myColor ?? undefined,\n    }), [socket, status, roomId, myColor]);\n\n    return <div id=\"component\">\n        <div id=\"online-controls\">\n            <button onClick={createGame} disabled={status === \"waiting\" || status === \"playing\"}>Create Game</button>\n            <button onClick={findMatch} disabled={status === \"waiting\" || status === \"playing\"}>Find Match</button>\n            <span style={{ margin: '0 8px' }}>|</span>\n            <button onClick={createPrivateRoom} disabled={status === \"waiting\" || status === \"playing\"}>Create Room (code)</button>\n            <input\n                placeholder=\"Enter room code\"\n                value={joinCode}\n                onChange={(e)=> setJoinCode(e.target.value)}\n                disabled={status === \"waiting\" || status === \"playing\"}\n                style={{ marginLeft: 8 }}\n            />\n            <button onClick={joinPrivateRoom} disabled={status === \"waiting\" || status === \"playing\" || !joinCode.trim()}>Join Room</button>\n            {status === \"waiting\" && <span className=\"hint\">Waiting for opponent... Room: {roomId}</span>}\n            {status === \"playing\" && <span className=\"hint\">Room: {roomId} | You are {myColor}</span>}\n            {(status === \"waiting\" || status === \"playing\") && <button onClick={disconnect}>Disconnect</button>}\n        </div>\n        <LoginComponent/>\n        <Chessboard online={online}/>\n    </div>\n}\n\nexport default GameComps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}