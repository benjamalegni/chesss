{"ast":null,"code":"import { assertNotStrictEqual } from './typings/common-types.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function usage(yargs, y18n, shim) {\n  const __ = y18n.__;\n  const self = {};\n  const fails = [];\n  self.failFn = function failFn(f) {\n    fails.push(f);\n  };\n  let failMessage = null;\n  let showHelpOnFail = true;\n  self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n    function parseFunctionArgs() {\n      return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n    }\n    const [enabled, message] = parseFunctionArgs();\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n  let failureOutput = false;\n  self.fail = function fail(msg, err) {\n    const logger = yargs._getLoggerInstance();\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self);\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true);\n      if (!failureOutput) {\n        failureOutput = true;\n        if (showHelpOnFail) {\n          yargs.showHelp('error');\n          logger.error();\n        }\n        if (msg || err) logger.error(msg || err);\n        if (failMessage) {\n          if (msg || err) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n      err = err || new YError(msg);\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  };\n  let usages = [];\n  let usageDisabled = false;\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true;\n      usages = [];\n      return self;\n    }\n    usageDisabled = false;\n    usages.push([msg, description || '']);\n    return self;\n  };\n  self.getUsage = () => {\n    return usages;\n  };\n  self.getUsageDisabled = () => {\n    return usageDisabled;\n  };\n  self.getPositionalGroupName = () => {\n    return __('Positionals:');\n  };\n  let examples = [];\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || '']);\n  };\n  let commands = [];\n  self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n    if (isDefault) {\n      commands = commands.map(cmdArray => {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n    commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n  };\n  self.getCommands = () => commands;\n  let descriptions = {};\n  self.describe = function describe(keyOrKeys, desc) {\n    if (Array.isArray(keyOrKeys)) {\n      keyOrKeys.forEach(k => {\n        self.describe(k, desc);\n      });\n    } else if (typeof keyOrKeys === 'object') {\n      Object.keys(keyOrKeys).forEach(k => {\n        self.describe(k, keyOrKeys[k]);\n      });\n    } else {\n      descriptions[keyOrKeys] = desc;\n    }\n  };\n  self.getDescriptions = () => descriptions;\n  let epilogs = [];\n  self.epilog = msg => {\n    epilogs.push(msg);\n  };\n  let wrapSet = false;\n  let wrap;\n  self.wrap = cols => {\n    wrapSet = true;\n    wrap = cols;\n  };\n  function getWrap() {\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n    return wrap;\n  }\n  const deferY18nLookupPrefix = '__yargsString__:';\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n  self.help = function help() {\n    if (cachedHelpMessage) return cachedHelpMessage;\n    normalizeAliases();\n    const base$0 = yargs.customScriptName ? yargs.$0 : shim.path.basename(yargs.$0);\n    const demandedOptions = yargs.getDemandedOptions();\n    const demandedCommands = yargs.getDemandedCommands();\n    const deprecatedOptions = yargs.getDeprecatedOptions();\n    const groups = yargs.getGroups();\n    const options = yargs.getOptions();\n    let keys = [];\n    keys = keys.concat(Object.keys(descriptions));\n    keys = keys.concat(Object.keys(demandedOptions));\n    keys = keys.concat(Object.keys(demandedCommands));\n    keys = keys.concat(Object.keys(options.default));\n    keys = keys.filter(filterHiddenOptions);\n    keys = Object.keys(keys.reduce((acc, key) => {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    const theWrap = getWrap();\n    const ui = shim.cliui({\n      width: theWrap,\n      wrap: !!theWrap\n    });\n    if (!usageDisabled) {\n      if (usages.length) {\n        usages.forEach(usage => {\n          ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n          if (usage[1]) {\n            ui.div({\n              text: `${usage[1]}`,\n              padding: [1, 0, 0, 0]\n            });\n          }\n        });\n        ui.div();\n      } else if (commands.length) {\n        let u = null;\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`;\n        } else {\n          u = `${base$0} [${__('command')}]\\n`;\n        }\n        ui.div(`${u}`);\n      }\n    }\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      const context = yargs.getContext();\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n      if (yargs.getParserConfiguration()['sort-commands'] === true) {\n        commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n      }\n      commands.forEach(command => {\n        const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n        ui.span({\n          text: commandString,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n        }, {\n          text: command[1]\n        });\n        const hints = [];\n        if (command[2]) hints.push(`[${__('default')}]`);\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n        }\n        if (command[4]) {\n          if (typeof command[4] === 'string') {\n            hints.push(`[${__('deprecated: %s', command[4])}]`);\n          } else {\n            hints.push(`[${__('deprecated')}]`);\n          }\n        }\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    }\n    const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n    const defaultGroup = __('Options:');\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n    const isLongSwitch = sw => /^--/.test(getText(sw));\n    const displayedGroups = Object.keys(groups).filter(groupName => groups[groupName].length > 0).map(groupName => {\n      const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map(key => {\n        if (~aliasKeys.indexOf(key)) return key;\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n        return key;\n      });\n      return {\n        groupName,\n        normalizedKeys\n      };\n    }).filter(({\n      normalizedKeys\n    }) => normalizedKeys.length > 0).map(({\n      groupName,\n      normalizedKeys\n    }) => {\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [key].concat(options.alias[key] || []).map(sw => {\n          if (groupName === self.getPositionalGroupName()) return sw;else {\n            return (/^[0-9]$/.test(sw) ? ~options.boolean.indexOf(key) ? '-' : '--' : sw.length > 1 ? '--' : '-') + sw;\n          }\n        }).sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2) ? 0 : isLongSwitch(sw1) ? 1 : -1).join(', ');\n        return acc;\n      }, {});\n      return {\n        groupName,\n        normalizedKeys,\n        switches\n      };\n    });\n    const shortSwitchesUsed = displayedGroups.filter(({\n      groupName\n    }) => groupName !== self.getPositionalGroupName()).some(({\n      normalizedKeys,\n      switches\n    }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n    if (shortSwitchesUsed) {\n      displayedGroups.filter(({\n        groupName\n      }) => groupName !== self.getPositionalGroupName()).forEach(({\n        normalizedKeys,\n        switches\n      }) => {\n        normalizedKeys.forEach(key => {\n          if (isLongSwitch(switches[key])) {\n            switches[key] = addIndentation(switches[key], '-x, '.length);\n          }\n        });\n      });\n    }\n    displayedGroups.forEach(({\n      groupName,\n      normalizedKeys,\n      switches\n    }) => {\n      ui.div(groupName);\n      normalizedKeys.forEach(key => {\n        const kswitch = switches[key];\n        let desc = descriptions[key] || '';\n        let type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = `[${__('boolean')}]`;\n        if (~options.count.indexOf(key)) type = `[${__('count')}]`;\n        if (~options.string.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.normalize.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.array.indexOf(key)) type = `[${__('array')}]`;\n        if (~options.number.indexOf(key)) type = `[${__('number')}]`;\n        const deprecatedExtra = deprecated => typeof deprecated === 'string' ? `[${__('deprecated: %s', deprecated)}]` : `[${__('deprecated')}]`;\n        const extra = [key in deprecatedOptions ? deprecatedExtra(deprecatedOptions[key]) : null, type, key in demandedOptions ? `[${__('required')}]` : null, options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: getText(kswitch),\n          padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    });\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(example => {\n        example[0] = example[0].replace(/\\$0/g, base$0);\n      });\n      examples.forEach(example => {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    }\n    if (epilogs.length > 0) {\n      const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n      ui.div(`${e}\\n`);\n    }\n    return ui.toString().replace(/\\s*$/, '');\n  };\n  function maxWidth(table, theWrap, modifier) {\n    let width = 0;\n    if (!Array.isArray(table)) {\n      table = Object.values(table).map(v => [v]);\n    }\n    table.forEach(v => {\n      width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n    });\n    if (theWrap) width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n    return width;\n  }\n  function normalizeAliases() {\n    const demandedOptions = yargs.getDemandedOptions();\n    const options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(key => {\n      options.alias[key].forEach(alias => {\n        if (descriptions[alias]) self.describe(key, descriptions[alias]);\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]);\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n        if (~options.number.indexOf(alias)) yargs.number(key);\n      });\n    });\n  }\n  let cachedHelpMessage;\n  self.cacheHelpMessage = function () {\n    cachedHelpMessage = this.help();\n  };\n  self.clearCachedHelpMessage = function () {\n    cachedHelpMessage = undefined;\n  };\n  function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n    let groupedKeys = [];\n    let toCheck = null;\n    Object.keys(groups).forEach(group => {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(key => {\n      toCheck = [key].concat(aliases[key]);\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n  function filterHiddenOptions(key) {\n    return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n  }\n  self.showHelp = level => {\n    const logger = yargs._getLoggerInstance();\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n  self.functionDescription = fn => {\n    const description = fn.name ? shim.Parser.decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n  self.stringifiedValues = function stringifiedValues(values, separator) {\n    let string = '';\n    const sep = separator || ', ';\n    const array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(value => {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  };\n  function defaultString(value, defaultDescription) {\n    let string = `[${__('default:')} `;\n    if (value === undefined && !defaultDescription) return null;\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`;\n          break;\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n        default:\n          string += value;\n      }\n    }\n    return `${string}]`;\n  }\n  function windowWidth() {\n    const maxWidth = 80;\n    if (shim.process.stdColumns) {\n      return Math.min(maxWidth, shim.process.stdColumns);\n    } else {\n      return maxWidth;\n    }\n  }\n  let version = null;\n  self.version = ver => {\n    version = ver;\n  };\n  self.showVersion = () => {\n    const logger = yargs._getLoggerInstance();\n    logger.log(version);\n  };\n  self.reset = function reset(localLookup) {\n    failMessage = null;\n    failureOutput = false;\n    usages = [];\n    usageDisabled = false;\n    epilogs = [];\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, k => !localLookup[k]);\n    return self;\n  };\n  const frozens = [];\n  self.freeze = function freeze() {\n    frozens.push({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    });\n  };\n  self.unfreeze = function unfreeze() {\n    const frozen = frozens.pop();\n    assertNotStrictEqual(frozen, undefined, shim);\n    ({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    } = frozen);\n  };\n  return self;\n}\nfunction isIndentedText(text) {\n  return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n  return isIndentedText(text) ? {\n    text: text.text,\n    indentation: text.indentation + indent\n  } : {\n    text,\n    indentation: indent\n  };\n}\nfunction getIndentation(text) {\n  return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n  return isIndentedText(text) ? text.text : text;\n}","map":{"version":3,"names":["assertNotStrictEqual","objFilter","YError","setBlocking","usage","yargs","y18n","shim","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","showHelpOnFailFn","arg1","arg2","parseFunctionArgs","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","exit","_hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","deprecated","map","cmdArray","getCommands","descriptions","describe","keyOrKeys","desc","Array","isArray","forEach","k","Object","keys","getDescriptions","epilogs","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","help","cachedHelpMessage","normalizeAliases","base$0","customScriptName","$0","path","basename","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","deprecatedOptions","getDeprecatedOptions","groups","getGroups","options","getOptions","concat","default","filter","filterHiddenOptions","reduce","acc","key","theWrap","ui","cliui","width","div","replace","text","padding","u","_","context","getContext","parentCommands","join","getParserConfiguration","sort","a","b","localeCompare","commandString","span","maxWidth","hints","align","aliasKeys","alias","parsed","newAliases","every","indexOf","defaultGroup","addUngroupedKeys","isLongSwitch","sw","test","getText","displayedGroups","groupName","normalizedKeys","aliasKey","undefined","switches","boolean","sw1","sw2","shortSwitchesUsed","some","addIndentation","kswitch","type","lastIndexOf","substring","count","string","normalize","array","number","deprecatedExtra","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","getIndentation","e","toString","table","modifier","values","v","Math","max","stringWidth","min","parseInt","demandOption","cacheHelpMessage","clearCachedHelpMessage","groupedKeys","toCheck","group","hiddenOptions","argv","showHiddenOpt","level","emit","functionDescription","fn","name","Parser","decamelize","separator","sep","value","JSON","stringify","process","stdColumns","version","ver","showVersion","log","reset","localLookup","frozens","freeze","unfreeze","frozen","pop","isIndentedText","indent","indentation"],"sources":["/home/outer/Documents/chesss/node_modules/yargs/build/lib/usage.js"],"sourcesContent":["import { assertNotStrictEqual, } from './typings/common-types.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function usage(yargs, y18n, shim) {\n    const __ = y18n.__;\n    const self = {};\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        function parseFunctionArgs() {\n            return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        }\n        const [enabled, message] = parseFunctionArgs();\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs._getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                fails[i](msg, err, self);\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                if (failMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(failMessage);\n                }\n            }\n            err = err || new YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs._hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        if (isDefault) {\n            commands = commands.map(cmdArray => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach(k => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach(k => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = msg => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = cols => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    function getWrap() {\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    }\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        const base$0 = yargs.customScriptName\n            ? yargs.$0\n            : shim.path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = getWrap();\n        const ui = shim.cliui({\n            width: theWrap,\n            wrap: !!theWrap,\n        });\n        if (!usageDisabled) {\n            if (usages.length) {\n                usages.forEach(usage => {\n                    ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        if (commands.length) {\n            ui.div(__('Commands:'));\n            const context = yargs.getContext();\n            const parentCommands = context.commands.length\n                ? `${context.commands.join(' ')} `\n                : '';\n            if (yargs.getParserConfiguration()['sort-commands'] === true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            commands.forEach(command => {\n                const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4,\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({\n                        text: hints.join(' '),\n                        padding: [0, 0, 0, 2],\n                        align: 'right',\n                    });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] &&\n            aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        const isLongSwitch = (sw) => /^--/.test(getText(sw));\n        const displayedGroups = Object.keys(groups)\n            .filter(groupName => groups[groupName].length > 0)\n            .map(groupName => {\n            const normalizedKeys = groups[groupName]\n                .filter(filterHiddenOptions)\n                .map(key => {\n                if (~aliasKeys.indexOf(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if (~(options.alias[aliasKey] || []).indexOf(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            return { groupName, normalizedKeys };\n        })\n            .filter(({ normalizedKeys }) => normalizedKeys.length > 0)\n            .map(({ groupName, normalizedKeys }) => {\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key]\n                    .concat(options.alias[key] || [])\n                    .map(sw => {\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return ((/^[0-9]$/.test(sw)\n                            ? ~options.boolean.indexOf(key)\n                                ? '-'\n                                : '--'\n                            : sw.length > 1\n                                ? '--'\n                                : '-') + sw);\n                    }\n                })\n                    .sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2)\n                    ? 0\n                    : isLongSwitch(sw1)\n                        ? 1\n                        : -1)\n                    .join(', ');\n                return acc;\n            }, {});\n            return { groupName, normalizedKeys, switches };\n        });\n        const shortSwitchesUsed = displayedGroups\n            .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n            .some(({ normalizedKeys, switches }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n        if (shortSwitchesUsed) {\n            displayedGroups\n                .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n                .forEach(({ normalizedKeys, switches }) => {\n                normalizedKeys.forEach(key => {\n                    if (isLongSwitch(switches[key])) {\n                        switches[key] = addIndentation(switches[key], '-x, '.length);\n                    }\n                });\n            });\n        }\n        displayedGroups.forEach(({ groupName, normalizedKeys, switches }) => {\n            ui.div(groupName);\n            normalizedKeys.forEach(key => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (~desc.lastIndexOf(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (~options.boolean.indexOf(key))\n                    type = `[${__('boolean')}]`;\n                if (~options.count.indexOf(key))\n                    type = `[${__('count')}]`;\n                if (~options.string.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.normalize.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.array.indexOf(key))\n                    type = `[${__('array')}]`;\n                if (~options.number.indexOf(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    key in deprecatedOptions\n                        ? deprecatedExtra(deprecatedOptions[key])\n                        : null,\n                    type,\n                    key in demandedOptions ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key]\n                        ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]`\n                        : null,\n                    defaultString(options.default[key], options.defaultDescription[key]),\n                ]\n                    .filter(Boolean)\n                    .join(' ');\n                ui.span({\n                    text: getText(kswitch),\n                    padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n                    width: maxWidth(switches, theWrap) + 4,\n                }, desc);\n                if (extra)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach(example => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach(example => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4,\n                    }, {\n                        text: example[1],\n                    });\n                }\n            });\n            ui.div();\n        }\n        if (epilogs.length > 0) {\n            const e = epilogs\n                .map(epilog => epilog.replace(/\\$0/g, base$0))\n                .join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach(v => {\n            width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n        });\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    function normalizeAliases() {\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach(key => {\n            options.alias[key].forEach(alias => {\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                if (~options.boolean.indexOf(alias))\n                    yargs.boolean(key);\n                if (~options.count.indexOf(alias))\n                    yargs.count(key);\n                if (~options.string.indexOf(alias))\n                    yargs.string(key);\n                if (~options.normalize.indexOf(alias))\n                    yargs.normalize(key);\n                if (~options.array.indexOf(alias))\n                    yargs.array(key);\n                if (~options.number.indexOf(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach(group => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach(key => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return (yargs.getOptions().hiddenOptions.indexOf(key) < 0 ||\n            yargs.parsed.argv[yargs.getOptions().showHiddenOpt]);\n    }\n    self.showHelp = (level) => {\n        const logger = yargs._getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = fn => {\n        const description = fn.name\n            ? shim.Parser.decamelize(fn.name, '-')\n            : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach(value => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    function windowWidth() {\n        const maxWidth = 80;\n        if (shim.process.stdColumns) {\n            return Math.min(maxWidth, shim.process.stdColumns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    let version = null;\n    self.version = ver => {\n        version = ver;\n    };\n    self.showVersion = () => {\n        const logger = yargs._getLoggerInstance();\n        logger.log(version);\n    };\n    self.reset = function reset(localLookup) {\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        assertNotStrictEqual(frozen, undefined, shim);\n        ({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        } = frozen);\n    };\n    return self;\n}\nfunction isIndentedText(text) {\n    return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n    return isIndentedText(text)\n        ? { text: text.text, indentation: text.indentation + indent }\n        : { text, indentation: indent };\n}\nfunction getIndentation(text) {\n    return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n    return isIndentedText(text) ? text.text : text;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}