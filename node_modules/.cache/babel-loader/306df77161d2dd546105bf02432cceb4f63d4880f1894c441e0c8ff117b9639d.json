{"ast":null,"code":"import'./Chessboard.css';import Tile from'../Tile/Tile';import Referee from'../../referee/Referee';import{useEffect,useRef,useState}from'react';import{XAXIS,YAXIS,TeamType,PieceType,initialBoardState,GRIDSIZE,samePosition}from'../../Constants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Chessboard(_ref){let{online}=_ref;const[activePiece,setActivePiece]=useState(null);const[grabPosition,setGrabPosition]=useState({x:-1,y:-1});const[pieces,setPieces]=useState(initialBoardState);const chessboardRef=useRef(null);const referee=new Referee();const[promotionPawn,setPromotionPawn]=useState();const modalRef=useRef(null);const[currentTurn,setCurrentTurn]=useState('white');const[lastMove,setLastMove]=useState(null);const[awaitingPromotion,setAwaitingPromotion]=useState(false);function getAllowedTeamForMe(){if(!online||online.status!=='playing'||!online.myColor){return null;}return online.myColor==='white'?TeamType.OUR:TeamType.OPPONENT;}function isMyTurn(){if(!online||online.status!=='playing'||!online.myColor){return true;// offline mode: always allowed\n}return online.myColor===currentTurn;}useEffect(()=>{if(online&&online.status==='playing'){setCurrentTurn('white');}},[online===null||online===void 0?void 0:online.status]);useEffect(()=>{const s=online===null||online===void 0?void 0:online.socket;if(!s)return;const onMessage=ev=>{try{const msg=JSON.parse(ev.data);if(msg.type==='move'&&online!==null&&online!==void 0&&online.roomId&&msg.roomId===online.roomId){const from=msg.from;const to=msg.to;const promotion=msg.promotionType;setPieces(currentPieces=>{let updated=currentPieces;const movingPiece=updated.find(p=>samePosition(p.position,from));if(!movingPiece){return updated;}const isEnPassantMove=Referee.isEnPassantMove(from,to,movingPiece.type,movingPiece.team,updated);const pawnDirecion=movingPiece.team===TeamType.OUR?1:-1;if(isEnPassantMove){updated=updated.reduce((results,piece)=>{if(samePosition(piece.position,from)){piece.enPassant=false;piece.position.x=to.x;piece.position.y=to.y;results.push(piece);}else if(!samePosition(piece.position,{x:to.x,y:to.y-pawnDirecion})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);}else{updated=updated.reduce((results,piece)=>{if(samePosition(piece.position,from)){piece.enPassant=Math.abs(from.y-to.y)===2&&piece.type===PieceType.PAWN;piece.position.x=to.x;piece.position.y=to.y;results.push(piece);}else if(!samePosition(piece.position,to)){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);}if(promotion!==undefined){const promoted=updated.find(p=>samePosition(p.position,to));if(promoted){promoted.type=promotion;const teamType=promoted.team===TeamType.OUR?\"w\":\"b\";let image=\"\";switch(promotion){case PieceType.ROOK:image=\"rook\";break;case PieceType.BISHOP:image=\"bishop\";break;case PieceType.KNIGHT:image=\"knight\";break;case PieceType.QUEEN:image=\"queen\";break;}if(image){promoted.image=`${process.env.PUBLIC_URL}/assets/images/${image}_${teamType}.svg`;}}}return updated;});setCurrentTurn(prev=>prev==='white'?'black':'white');}}catch(_e){// ignore\n}};s.addEventListener('message',onMessage);return()=>{s.removeEventListener('message',onMessage);};},[online===null||online===void 0?void 0:online.socket,online===null||online===void 0?void 0:online.roomId]);function updateValidMoves(){setPieces(currentPieces=>{return currentPieces.map(p=>{p.possibleMoves=referee.getValidMoves(p,currentPieces);return p;});});}function grabPiece(e){updateValidMoves();const chessboard=chessboardRef.current;const element=e.target;if(element.classList.contains(\"chess-piece\")&&chessboard){const grabX=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const grabY=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));const pieceAtTile=pieces.find(p=>samePosition(p.position,{x:grabX,y:grabY}));// Online restrictions\nif(online&&online.status==='playing'){const myTeam=getAllowedTeamForMe();if(!isMyTurn()||myTeam===null||!pieceAtTile||pieceAtTile.team!==myTeam){return;// can't grab\n}}setGrabPosition({x:grabX,y:grabY});const x=e.clientX-GRIDSIZE/2;const y=e.clientY-GRIDSIZE/2;element.style.position=\"absolute\";element.style.left=`${x}px`;element.style.top=`${y}px`;setActivePiece(element);}}function movePiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){const x=e.clientX-50;const y=e.clientY-50;const minX=chessboard.offsetLeft-25;const minY=chessboard.offsetTop-25;const maxX=chessboard.offsetLeft+chessboard.clientWidth-75;const maxY=chessboard.offsetTop+chessboard.clientHeight-75;activePiece.style.position=\"absolute\";// x axis limits\nif(x<minX){activePiece.style.left=`${minX}px`;}else if(x>maxX){activePiece.style.left=`${maxX}px`;}else{activePiece.style.left=`${x}px`;}// y axis limits\nif(y<minY){activePiece.style.top=`${minY}px`;}else if(y>maxY){activePiece.style.top=`${maxY}px`;}else{activePiece.style.top=`${y}px`;}}}function dropPiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){// substracted 800 to align with chessboard axis (starting from bottom left)\nconst x=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const y=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));const currentPiece=pieces.find(p=>samePosition(p.position,grabPosition));if(currentPiece){const validMove=referee.isValidMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const isEnPassantMove=Referee.isEnPassantMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const pawnDirecion=currentPiece.team===TeamType.OUR?1:-1;if(online&&online.status==='playing'){const myTeam=getAllowedTeamForMe();if(!isMyTurn()||myTeam===null||currentPiece.team!==myTeam){// Reset piece position and bail\nactivePiece.style.position='relative';activePiece.style.removeProperty(\"top\");activePiece.style.removeProperty(\"left\");setActivePiece(null);return;}}if(isEnPassantMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){piece.enPassant=false;piece.position.x=x;piece.position.y=y;results.push(piece);}else if(!samePosition(piece.position,{x,y:y-pawnDirecion})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);setLastMove({from:grabPosition,to:{x,y}});if(!online||online.status!=='playing'){// offline toggle turn for consistency\nsetCurrentTurn(prev=>prev==='white'?'black':'white');}else{var _online$socket;// send immediately (no promotion possible on en passant)\n(_online$socket=online.socket)===null||_online$socket===void 0?void 0:_online$socket.send(JSON.stringify({type:'move',roomId:online.roomId,from:grabPosition,to:{x,y}}));setCurrentTurn(prev=>prev==='white'?'black':'white');}}else if(validMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){// SPECIAL MOVE\npiece.enPassant=Math.abs(grabPosition.y-y)===2&&piece.type===PieceType.PAWN;piece.position.x=x;piece.position.y=y;// pawn promotion row\nlet promotionRow=piece.team===TeamType.OUR?7:0;if(y===promotionRow&&piece.type===PieceType.PAWN){var _modalRef$current;//make promotion\n(_modalRef$current=modalRef.current)===null||_modalRef$current===void 0?void 0:_modalRef$current.classList.remove(\"hidden\");setPromotionPawn(piece);setAwaitingPromotion(true);}results.push(piece);}else if(!samePosition(piece.position,{x,y})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);setLastMove({from:grabPosition,to:{x,y}});if(!awaitingPromotion){if(!online||online.status!=='playing'){setCurrentTurn(prev=>prev==='white'?'black':'white');}else{var _online$socket2;// no promotion: send immediately\n(_online$socket2=online.socket)===null||_online$socket2===void 0?void 0:_online$socket2.send(JSON.stringify({type:'move',roomId:online.roomId,from:grabPosition,to:{x,y}}));setCurrentTurn(prev=>prev==='white'?'black':'white');}}}else{//reset piece position\nactivePiece.style.position='relative';activePiece.style.removeProperty(\"top\");activePiece.style.removeProperty(\"left\");}}setActivePiece(null);}}function promotePawn(pieceType){var _modalRef$current2;if(promotionPawn===undefined){return;}const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,promotionPawn===null||promotionPawn===void 0?void 0:promotionPawn.position)){piece.type=pieceType;const teamType=piece.team===TeamType.OUR?\"w\":\"b\";let image=\"\";switch(pieceType){case PieceType.ROOK:{image=\"rook\";break;}case PieceType.BISHOP:{image=\"bishop\";break;}case PieceType.KNIGHT:{image=\"knight\";break;}case PieceType.QUEEN:{image=\"queen\";break;}}piece.image=`${process.env.PUBLIC_URL}/assets/images/${image}_${teamType}.svg`;}results.push(piece);return results;},[]);setPieces(updatedPieces);(_modalRef$current2=modalRef.current)===null||_modalRef$current2===void 0?void 0:_modalRef$current2.classList.add(\"hidden\");setAwaitingPromotion(false);if(online&&online.status==='playing'&&lastMove){var _online$socket3;(_online$socket3=online.socket)===null||_online$socket3===void 0?void 0:_online$socket3.send(JSON.stringify({type:'move',roomId:online.roomId,from:lastMove.from,to:lastMove.to,promotionType:pieceType}));setCurrentTurn(prev=>prev==='white'?'black':'white');}else if(!online||online.status!=='playing'){setCurrentTurn(prev=>prev==='white'?'black':'white');}}function promotionTeamType(){return(promotionPawn===null||promotionPawn===void 0?void 0:promotionPawn.team)===TeamType.OUR?\"w\":\"b\";}let board=[];for(let y=YAXIS.length-1;y>=0;y--){for(let x=0;x<XAXIS.length;x++){// check whether the sum of numbers x,y is even to draw each tile\nconst isEven=(x+y+2)%2===0;let img=undefined;pieces.forEach(p=>{if(samePosition(p.position,{x:x,y:y})){img=p.image;}});let currentPiece=pieces.find(p=>samePosition(p.position,grabPosition));let highlight=currentPiece!==null&&currentPiece!==void 0&&currentPiece.possibleMoves?currentPiece.possibleMoves.some(p=>samePosition(p,{x:x,y:y})):false;board.push(/*#__PURE__*/_jsx(Tile,{isEven:isEven,image:img,highlight:highlight},`${x},${y}`));}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"pawn-promotion-modal\",className:\"hidden\",ref:modalRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.ROOK),src:`${process.env.PUBLIC_URL}/assets/images/rook_${promotionTeamType()}.svg`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.BISHOP),src:`${process.env.PUBLIC_URL}/assets/images/bishop_${promotionTeamType()}.svg`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.KNIGHT),src:`${process.env.PUBLIC_URL}/assets/images/knight_${promotionTeamType()}.svg`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.QUEEN),src:`${process.env.PUBLIC_URL}/assets/images/queen_${promotionTeamType()}.svg`})]})}),/*#__PURE__*/_jsx(\"div\",{onMouseMove:e=>movePiece(e),onMouseDown:e=>grabPiece(e),onMouseUp:e=>dropPiece(e),id:\"chessboard\",ref:chessboardRef,children:board})]});}","map":{"version":3,"names":["Tile","Referee","useEffect","useRef","useState","XAXIS","YAXIS","TeamType","PieceType","initialBoardState","GRIDSIZE","samePosition","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chessboard","_ref","online","activePiece","setActivePiece","grabPosition","setGrabPosition","x","y","pieces","setPieces","chessboardRef","referee","promotionPawn","setPromotionPawn","modalRef","currentTurn","setCurrentTurn","lastMove","setLastMove","awaitingPromotion","setAwaitingPromotion","getAllowedTeamForMe","status","myColor","OUR","OPPONENT","isMyTurn","s","socket","onMessage","ev","msg","JSON","parse","data","type","roomId","from","to","promotion","promotionType","currentPieces","updated","movingPiece","find","p","position","isEnPassantMove","team","pawnDirecion","reduce","results","piece","enPassant","push","PAWN","Math","abs","undefined","promoted","teamType","image","ROOK","BISHOP","KNIGHT","QUEEN","process","env","PUBLIC_URL","prev","_e","addEventListener","removeEventListener","updateValidMoves","map","possibleMoves","getValidMoves","grabPiece","e","chessboard","current","element","target","classList","contains","grabX","floor","clientX","offsetLeft","grabY","ceil","clientY","offsetTop","pieceAtTile","myTeam","style","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","validMove","isValidMove","removeProperty","updatedPieces","_online$socket","send","stringify","promotionRow","_modalRef$current","remove","_online$socket2","promotePawn","pieceType","_modalRef$current2","add","_online$socket3","promotionTeamType","board","length","isEven","img","forEach","highlight","some","children","id","className","ref","onClick","src","onMouseMove","onMouseDown","onMouseUp"],"sources":["/home/Outer/Documents/chesss/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\nimport Referee from '../../referee/Referee'\nimport { useEffect, useRef, useState } from 'react';\nimport { XAXIS, YAXIS, Piece, TeamType, PieceType, initialBoardState, Position, GRIDSIZE, samePosition } from '../../Constants';\n\ninterface OnlineProps{\n    socket: WebSocket | null;\n    status: 'offline' | 'waiting' | 'playing';\n    roomId?: string;\n    myColor?: 'white' | 'black';\n}\n\nexport default function Chessboard({ online }: { online?: OnlineProps }){\nconst [activePiece, setActivePiece] = useState<HTMLElement | null>(null)\nconst [grabPosition, setGrabPosition] = useState<Position>({x:-1, y:-1});\nconst [pieces, setPieces] = useState<Piece[]>(initialBoardState);\nconst chessboardRef = useRef<HTMLDivElement>(null);\nconst referee = new Referee();\nconst [promotionPawn, setPromotionPawn] = useState<Piece>();\nconst modalRef = useRef<HTMLDivElement>(null);\nconst [currentTurn, setCurrentTurn] = useState<'white'|'black'>('white');\nconst [lastMove, setLastMove] = useState<{from: Position, to: Position} | null>(null);\nconst [awaitingPromotion, setAwaitingPromotion] = useState<boolean>(false);\n\nfunction getAllowedTeamForMe(): TeamType | null{\n    if(!online || online.status !== 'playing' || !online.myColor){\n        return null;\n    }\n    return online.myColor === 'white' ? TeamType.OUR : TeamType.OPPONENT;\n}\n\nfunction isMyTurn(): boolean{\n    if(!online || online.status !== 'playing' || !online.myColor){\n        return true; // offline mode: always allowed\n    }\n    return online.myColor === currentTurn;\n}\n\nuseEffect(()=>{\n    if(online && online.status === 'playing'){\n        setCurrentTurn('white');\n    }\n}, [online?.status]);\n\nuseEffect(()=>{\n    const s = online?.socket;\n    if(!s) return;\n    const onMessage = (ev: MessageEvent) => {\n        try{\n            const msg = JSON.parse(ev.data);\n            if(msg.type === 'move' && online?.roomId && msg.roomId === online.roomId){\n                const from: Position = msg.from;\n                const to: Position = msg.to;\n                const promotion: PieceType | undefined = msg.promotionType;\n                setPieces((currentPieces)=>{\n                    let updated = currentPieces;\n                    const movingPiece = updated.find(p=> samePosition(p.position, from));\n                    if(!movingPiece){\n                        return updated;\n                    }\n                    const isEnPassantMove = Referee.isEnPassantMove(from, to, movingPiece.type, movingPiece.team, updated);\n                    const pawnDirecion = movingPiece.team === TeamType.OUR?1:-1;\n                    if(isEnPassantMove){\n                        updated = updated.reduce((results, piece)=>{\n                            if(samePosition(piece.position, from)){\n                                piece.enPassant=false;\n                                piece.position.x=to.x;\n                                piece.position.y=to.y;\n                                results.push(piece);\n                            }else if(!samePosition(piece.position, {x: to.x, y: to.y - pawnDirecion})){\n                                if(piece.type===PieceType.PAWN){\n                                    piece.enPassant=false;\n                                }\n                                results.push(piece);\n                            }\n                            return results;\n                        }, [] as Piece[]);\n                    } else {\n                        updated = updated.reduce((results, piece)=>{\n                            if(samePosition(piece.position, from)){\n                                piece.enPassant = Math.abs(from.y - to.y)===2 && (piece.type===PieceType.PAWN);\n                                piece.position.x = to.x;\n                                piece.position.y = to.y;\n                                results.push(piece);\n                            } else if(!samePosition(piece.position, to)){\n                                if(piece.type===PieceType.PAWN){\n                                    piece.enPassant=false;\n                                }\n                                results.push(piece);\n                            }\n                            return results;\n                        }, [] as Piece[]);\n                    }\n                    if(promotion !== undefined){\n                        const promoted = updated.find(p=> samePosition(p.position, to));\n                        if(promoted){\n                            promoted.type = promotion;\n                            const teamType = (promoted.team === TeamType.OUR)?\"w\":\"b\";\n                            let image = \"\";\n                            switch(promotion){\n                                case PieceType.ROOK: image = \"rook\"; break;\n                                case PieceType.BISHOP: image = \"bishop\"; break;\n                                case PieceType.KNIGHT: image = \"knight\"; break;\n                                case PieceType.QUEEN: image = \"queen\"; break;\n                            }\n                            if(image){\n                                promoted.image = `${process.env.PUBLIC_URL}/assets/images/${image}_${teamType}.svg`;\n                            }\n                        }\n                    }\n                    return updated;\n                });\n                setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n            }\n        }catch(_e){\n            // ignore\n        }\n    };\n    s.addEventListener('message', onMessage);\n    return () => {\n        s.removeEventListener('message', onMessage);\n    };\n}, [online?.socket, online?.roomId]);\n\nfunction updateValidMoves(){\n    setPieces((currentPieces) => {\n        return currentPieces.map(p=>{\n            p.possibleMoves = referee.getValidMoves(p, currentPieces);\n            return p;\n\n        });\n    });\n}\n\nfunction grabPiece(e: React.MouseEvent){\n    updateValidMoves();\n\n    const chessboard = chessboardRef.current;\n    const element = e.target as HTMLElement;\n\n    if(element.classList.contains(\"chess-piece\") && chessboard){\n        const grabX = Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE)\n        const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE))\n        const pieceAtTile = pieces.find(p => samePosition(p.position, {x: grabX, y: grabY}));\n\n        // Online restrictions\n        if(online && online.status === 'playing'){\n            const myTeam = getAllowedTeamForMe();\n            if(!isMyTurn() || myTeam === null || !pieceAtTile || pieceAtTile.team !== myTeam){\n                return; // can't grab\n            }\n        }\n\n        setGrabPosition({x:grabX, y:grabY})\n\n        const x = e.clientX - GRIDSIZE/2;\n        const y = e.clientY -GRIDSIZE/2;\n        element.style.position=\"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n\n        setActivePiece(element);\n    }\n}\n\nfunction movePiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n\n        const minX = chessboard.offsetLeft -25;\n        const minY = chessboard.offsetTop -25;\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth -75 ;\n        const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n\n        activePiece.style.position=\"absolute\";\n\n        // x axis limits\n        if(x<minX){\n            activePiece.style.left = `${minX}px`;\n        } else if(x>maxX){\n            activePiece.style.left = `${maxX}px`;\n        } else{\n            activePiece.style.left = `${x}px`;\n        }\n\n        // y axis limits\n        if(y<minY){\n            activePiece.style.top = `${minY}px`;\n        } else if(y>maxY){\n            activePiece.style.top = `${maxY}px`;\n        } else{\n            activePiece.style.top = `${y}px`;\n        }\n        \n    }\n}\n\nfunction dropPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        // substracted 800 to align with chessboard axis (starting from bottom left)\n        const x=Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE);\n        const y=Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE));\n\n        const currentPiece = pieces.find(\n            (p)=> samePosition(p.position, grabPosition));\n\n        if(currentPiece){\n            const validMove = referee.isValidMove(grabPosition, {x,y}, currentPiece.type,currentPiece.team, pieces);\n            const isEnPassantMove = Referee.isEnPassantMove(grabPosition, {x,y},currentPiece.type,currentPiece.team, pieces)\n            const pawnDirecion = currentPiece.team === TeamType.OUR?1:-1;\n\n            if(online && online.status === 'playing'){\n                const myTeam = getAllowedTeamForMe();\n                if(!isMyTurn() || myTeam === null || currentPiece.team !== myTeam){\n                    // Reset piece position and bail\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n                    setActivePiece(null);\n                    return;\n                }\n            }\n\n            if(isEnPassantMove){\n                const updatedPieces = pieces.reduce((results, piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        piece.enPassant=false;\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!samePosition(piece.position, {x, y: y-pawnDirecion})){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                   \n\n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n                setLastMove({from: grabPosition, to: {x, y}});\n                if(!online || online.status !== 'playing'){\n                    // offline toggle turn for consistency\n                    setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n                } else {\n                    // send immediately (no promotion possible on en passant)\n                    online.socket?.send(JSON.stringify({\n                        type: 'move',\n                        roomId: online.roomId,\n                        from: grabPosition,\n                        to: {x, y}\n                    }));\n                    setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n                }\n            }else if(validMove){\n                const updatedPieces = pieces.reduce((results,piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        // SPECIAL MOVE\n                        piece.enPassant = Math.abs(grabPosition.y-y)===2 &&(piece.type===PieceType.PAWN)\n                        piece.position.x=x;\n                        piece.position.y=y;\n\n                        // pawn promotion row\n                        let promotionRow = piece.team === TeamType.OUR ? 7:0;\n                        if(y===promotionRow && piece.type === PieceType.PAWN){\n                            //make promotion\n                            modalRef.current?.classList.remove(\"hidden\")\n                            setPromotionPawn(piece);\n                            setAwaitingPromotion(true);\n                        }\n\n                        results.push(piece);\n                    }else if(!(samePosition(piece.position, {x,y}))){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                  \n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n                setLastMove({from: grabPosition, to: {x, y}});\n                if(!(awaitingPromotion)){\n                    if(!online || online.status !== 'playing'){\n                        setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n                    } else {\n                        // no promotion: send immediately\n                        online.socket?.send(JSON.stringify({\n                            type: 'move',\n                            roomId: online.roomId,\n                            from: grabPosition,\n                            to: {x, y}\n                        }));\n                        setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n                    }\n                }\n            }else{\n                //reset piece position\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n\n            }\n        }\n\n        \n        setActivePiece(null);\n    }\n}\n\n    function promotePawn(pieceType: PieceType){\n        if(promotionPawn===undefined){\n            return;\n        }\n        const updatedPieces = pieces.reduce((results, piece) =>{\n\n            if(samePosition(piece.position, promotionPawn?.position)){\n                piece.type = pieceType;\n                const teamType = (piece.team === TeamType.OUR)?\"w\":\"b\";\n                let image = \"\";\n                switch(pieceType){\n                    case PieceType.ROOK:{\n                        image = \"rook\";\n                        break;\n                    }\n\n                    case PieceType.BISHOP:{\n                        image = \"bishop\";\n                        break;\n                    }\n\n                    case PieceType.KNIGHT:{\n                        image = \"knight\";\n                        break;\n                    }\n\n                    case PieceType.QUEEN:{\n                        image = \"queen\";\n                        break;\n                    }\n                }\n                piece.image = `${process.env.PUBLIC_URL}/assets/images/${image}_${teamType}.svg`;\n            }\n\n            results.push(piece);\n            return results;\n        }, [] as Piece[])\n        setPieces(updatedPieces);\n        modalRef.current?.classList.add(\"hidden\");\n        setAwaitingPromotion(false);\n        if(online && online.status === 'playing' && lastMove){\n            online.socket?.send(JSON.stringify({\n                type: 'move',\n                roomId: online.roomId,\n                from: lastMove.from,\n                to: lastMove.to,\n                promotionType: pieceType\n            }));\n            setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n        } else if(!online || online.status !== 'playing'){\n            setCurrentTurn(prev => prev === 'white' ? 'black' : 'white');\n        }\n    }\n\n\n    function promotionTeamType(){\n        return (promotionPawn?.team === TeamType.OUR)?\"w\":\"b\";\n    }\n\n    let board = [];\n\n    for(let y= YAXIS.length-1;y>=0;y--){\n        for(let x=0;x<XAXIS.length;x++){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let img = undefined;\n\n            pieces.forEach(p=> {\n                if(samePosition(p.position, {x:x, y:y})){\n                    img=p.image\n                }\n            })\n\n            let currentPiece = pieces.find(p=> samePosition(p.position,grabPosition));\n            let highlight = (currentPiece?.possibleMoves) ? currentPiece.possibleMoves.some(p=> samePosition(p, {x:x , y:y})): false;\n            \n            board.push(\n                    <Tile key={`${x},${y}`} isEven={isEven} image={img} highlight={highlight}/> \n            )\n        }\n    }       \n\n\n    return(\n        <>\n        <div id=\"pawn-promotion-modal\" className=\"hidden\" ref={modalRef}>\n            <div className=\"modal-body\">\n\n            <img onClick={()=> promotePawn(PieceType.ROOK)} src={`${process.env.PUBLIC_URL}/assets/images/rook_${promotionTeamType()}.svg`}/>\n            <img onClick={()=> promotePawn(PieceType.BISHOP)} src={`${process.env.PUBLIC_URL}/assets/images/bishop_${promotionTeamType()}.svg`}/>\n            <img onClick={()=> promotePawn(PieceType.KNIGHT)} src={`${process.env.PUBLIC_URL}/assets/images/knight_${promotionTeamType()}.svg`}/>\n            <img onClick={()=> promotePawn(PieceType.QUEEN)} src={`${process.env.PUBLIC_URL}/assets/images/queen_${promotionTeamType()}.svg`}/>\n            </div>\n        </div>\n\n        <div \n            onMouseMove={(e)=>movePiece(e)} \n            onMouseDown={e=> grabPiece(e)} \n            onMouseUp={(e)=> dropPiece(e)}\n            id=\"chessboard\"\n            ref={chessboardRef}>\n                {board}\n        </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}