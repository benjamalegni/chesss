{"ast":null,"code":"import'./Chessboard.css';import Tile from'../Tile/Tile';import Referee from'../../referee/Referee';import{useRef,useState}from'react';import{XAXIS,YAXIS,TeamType,PieceType,initialBoardState,GRIDSIZE,samePosition}from'../../Constants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Chessboard(){const[activePiece,setActivePiece]=useState(null);const[grabPosition,setGrabPosition]=useState({x:-1,y:-1});const[pieces,setPieces]=useState(initialBoardState);const chessboardRef=useRef(null);const referee=new Referee();const[promotionPawn,setPromotionPawn]=useState();const modalRef=useRef(null);function updateValidMoves(){setPieces(currentPieces=>{return currentPieces.map(p=>{p.possibleMoves=referee.getValidMoves(p,currentPieces);return p;});});}function grabPiece(e){updateValidMoves();const chessboard=chessboardRef.current;const element=e.target;if(element.classList.contains(\"chess-piece\")&&chessboard){const grabX=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const grabY=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));setGrabPosition({x:grabX,y:grabY});const x=e.clientX-GRIDSIZE/2;const y=e.clientY-GRIDSIZE/2;element.style.position=\"absolute\";element.style.left=`${x}px`;element.style.top=`${y}px`;setActivePiece(element);}}function movePiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){const x=e.clientX-50;const y=e.clientY-50;const minX=chessboard.offsetLeft-25;const minY=chessboard.offsetTop-25;const maxX=chessboard.offsetLeft+chessboard.clientWidth-75;const maxY=chessboard.offsetTop+chessboard.clientHeight-75;activePiece.style.position=\"absolute\";// x axis limits\nif(x<minX){activePiece.style.left=`${minX}px`;}else if(x>maxX){activePiece.style.left=`${maxX}px`;}else{activePiece.style.left=`${x}px`;}// y axis limits\nif(y<minY){activePiece.style.top=`${minY}px`;}else if(y>maxY){activePiece.style.top=`${maxY}px`;}else{activePiece.style.top=`${y}px`;}}}function dropPiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){// substracted 800 to align with chessboard axis (starting from bottom left)\nconst x=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const y=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));const currentPiece=pieces.find(p=>samePosition(p.position,grabPosition));if(currentPiece){const validMove=referee.isValidMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const isEnPassantMove=Referee.isEnPassantMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const pawnDirecion=currentPiece.team===TeamType.OUR?1:-1;if(isEnPassantMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){piece.enPassant=false;piece.position.x=x;piece.position.y=y;results.push(piece);}else if(!samePosition(piece.position,{x,y:y-pawnDirecion})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);}else if(validMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){// SPECIAL MOVE\npiece.enPassant=Math.abs(grabPosition.y-y)===2&&piece.type===PieceType.PAWN;piece.position.x=x;piece.position.y=y;// pawn promotion row\nlet promotionRow=piece.team===TeamType.OUR?7:0;if(y===promotionRow&&piece.type===PieceType.PAWN){var _modalRef$current;//make promotion\n(_modalRef$current=modalRef.current)===null||_modalRef$current===void 0?void 0:_modalRef$current.classList.remove(\"hidden\");setPromotionPawn(piece);}results.push(piece);}else if(!samePosition(piece.position,{x,y})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);}else{//reset piece position\nactivePiece.style.position='relative';activePiece.style.removeProperty(\"top\");activePiece.style.removeProperty(\"left\");}}setActivePiece(null);}}function promotePawn(pieceType){var _modalRef$current2;if(promotionPawn===undefined){return;}const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,promotionPawn===null||promotionPawn===void 0?void 0:promotionPawn.position)){piece.type=pieceType;const teamType=piece.team===TeamType.OUR?\"w\":\"b\";let image=\"\";switch(pieceType){case PieceType.ROOK:{image=\"rook\";break;}case PieceType.BISHOP:{image=\"bishop\";break;}case PieceType.KNIGHT:{image=\"knight\";break;}case PieceType.QUEEN:{image=\"queen\";break;}}piece.image=`assets/images/${image}_${teamType}.png`;}results.push(piece);return results;},[]);setPieces(updatedPieces);(_modalRef$current2=modalRef.current)===null||_modalRef$current2===void 0?void 0:_modalRef$current2.classList.add(\"hidden\");}function promotionTeamType(){return(promotionPawn===null||promotionPawn===void 0?void 0:promotionPawn.team)===TeamType.OUR?\"w\":\"b\";}let board=[];for(let y=YAXIS.length-1;y>=0;y--){for(let x=0;x<XAXIS.length;x++){// check whether the sum of numbers x,y is even to draw each tile\nconst isEven=(x+y+2)%2===0;let img=undefined;pieces.forEach(p=>{if(samePosition(p.position,{x:x,y:y})){img=p.image;}});let currentPiece=pieces.find(p=>samePosition(p.position,grabPosition));let highlight=currentPiece!==null&&currentPiece!==void 0&&currentPiece.possibleMoves?currentPiece.possibleMoves.some(p=>samePosition(p,{x:x,y:y})):false;board.push(/*#__PURE__*/_jsx(Tile,{isEven:isEven,image:img,highlight:highlight},`${x},${y}`));}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"pawn-promotion-modal\",className:\"hidden\",ref:modalRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.ROOK),src:`/assets/images/rook_${promotionTeamType()}.png`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.BISHOP),src:`/assets/images/bishop_${promotionTeamType()}.png`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.KNIGHT),src:`/assets/images/knight_${promotionTeamType()}.png`}),/*#__PURE__*/_jsx(\"img\",{onClick:()=>promotePawn(PieceType.QUEEN),src:`/assets/images/queen_${promotionTeamType()}.png`})]})}),/*#__PURE__*/_jsx(\"div\",{onMouseMove:e=>movePiece(e),onMouseDown:e=>grabPiece(e),onMouseUp:e=>dropPiece(e),id:\"chessboard\",ref:chessboardRef,children:board})]});}","map":{"version":3,"names":["Tile","Referee","useRef","useState","XAXIS","YAXIS","TeamType","PieceType","initialBoardState","GRIDSIZE","samePosition","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chessboard","activePiece","setActivePiece","grabPosition","setGrabPosition","x","y","pieces","setPieces","chessboardRef","referee","promotionPawn","setPromotionPawn","modalRef","updateValidMoves","currentPieces","map","p","possibleMoves","getValidMoves","grabPiece","e","chessboard","current","element","target","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","validMove","isValidMove","type","team","isEnPassantMove","pawnDirecion","OUR","updatedPieces","reduce","results","piece","enPassant","push","PAWN","promotionRow","_modalRef$current","remove","removeProperty","promotePawn","pieceType","_modalRef$current2","undefined","teamType","image","ROOK","BISHOP","KNIGHT","QUEEN","add","promotionTeamType","board","length","isEven","img","forEach","highlight","some","children","id","className","ref","onClick","src","onMouseMove","onMouseDown","onMouseUp"],"sources":["/home/outer/Documents/chesss/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\nimport Referee from '../../referee/Referee'\nimport { useRef, useState } from 'react';\nimport { XAXIS, YAXIS, Piece, TeamType, PieceType, initialBoardState, Position, GRIDSIZE, samePosition } from '../../Constants';\n\nexport default function Chessboard(){\nconst [activePiece, setActivePiece] = useState<HTMLElement | null>(null)\nconst [grabPosition, setGrabPosition] = useState<Position>({x:-1, y:-1});\nconst [pieces, setPieces] = useState<Piece[]>(initialBoardState);\nconst chessboardRef = useRef<HTMLDivElement>(null);\nconst referee = new Referee();\nconst [promotionPawn, setPromotionPawn] = useState<Piece>();\nconst modalRef = useRef<HTMLDivElement>(null);\n\nfunction updateValidMoves(){\n    setPieces((currentPieces) => {\n        return currentPieces.map(p=>{\n            p.possibleMoves = referee.getValidMoves(p, currentPieces);\n            return p;\n\n        });\n    });\n}\n\n\n\nfunction grabPiece(e: React.MouseEvent){\n    updateValidMoves();\n\n    const chessboard = chessboardRef.current;\n    const element = e.target as HTMLElement;\n\n    if(element.classList.contains(\"chess-piece\") && chessboard){\n        const grabX = Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE)\n        const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE))\n        setGrabPosition({x:grabX, y:grabY})\n\n        const x = e.clientX - GRIDSIZE/2;\n        const y = e.clientY -GRIDSIZE/2;\n        element.style.position=\"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n\n\n\n        setActivePiece(element);\n    }\n}\n\nfunction movePiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n\n        const minX = chessboard.offsetLeft -25;\n        const minY = chessboard.offsetTop -25;\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth -75 ;\n        const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n\n        activePiece.style.position=\"absolute\";\n\n\n        // x axis limits\n        if(x<minX){\n            activePiece.style.left = `${minX}px`;\n        } else if(x>maxX){\n            activePiece.style.left = `${maxX}px`;\n        } else{\n            activePiece.style.left = `${x}px`;\n        }\n\n        // y axis limits\n        if(y<minY){\n            activePiece.style.top = `${minY}px`;\n        } else if(y>maxY){\n            activePiece.style.top = `${maxY}px`;\n        } else{\n            activePiece.style.top = `${y}px`;\n        }\n        \n    }\n}\n\nfunction dropPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        // substracted 800 to align with chessboard axis (starting from bottom left)\n        const x=Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE);\n        const y=Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE));\n\n        const currentPiece = pieces.find(\n            (p)=> samePosition(p.position, grabPosition));\n\n        if(currentPiece){\n            const validMove = referee.isValidMove(grabPosition, {x,y}, currentPiece.type,currentPiece.team, pieces);\n            const isEnPassantMove = Referee.isEnPassantMove(grabPosition, {x,y},currentPiece.type,currentPiece.team, pieces)\n            const pawnDirecion = currentPiece.team === TeamType.OUR?1:-1;\n\n            if(isEnPassantMove){\n                const updatedPieces = pieces.reduce((results, piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        piece.enPassant=false;\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!samePosition(piece.position, {x, y: y-pawnDirecion})){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                   \n\n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else if(validMove){\n                const updatedPieces = pieces.reduce((results,piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        // SPECIAL MOVE\n                        piece.enPassant = Math.abs(grabPosition.y-y)===2 &&(piece.type===PieceType.PAWN)\n                        piece.position.x=x;\n                        piece.position.y=y;\n\n                        // pawn promotion row\n                        let promotionRow = piece.team === TeamType.OUR ? 7:0;\n                        if(y===promotionRow && piece.type === PieceType.PAWN){\n                            //make promotion\n                            modalRef.current?.classList.remove(\"hidden\")\n                            setPromotionPawn(piece);\n                        }\n\n                        results.push(piece);\n                    }else if(!(samePosition(piece.position, {x,y}))){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                  \n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else{\n                //reset piece position\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n\n            }\n        }\n\n        \n        setActivePiece(null);\n    }\n}\n\n    function promotePawn(pieceType: PieceType){\n        if(promotionPawn===undefined){\n            return;\n        }\n        const updatedPieces = pieces.reduce((results, piece) =>{\n\n            if(samePosition(piece.position, promotionPawn?.position)){\n                piece.type = pieceType;\n                const teamType = (piece.team === TeamType.OUR)?\"w\":\"b\";\n                let image = \"\";\n                switch(pieceType){\n                    case PieceType.ROOK:{\n                        image = \"rook\";\n                        break;\n                    }\n\n                    case PieceType.BISHOP:{\n                        image = \"bishop\";\n                        break;\n                    }\n\n                    case PieceType.KNIGHT:{\n                        image = \"knight\";\n                        break;\n                    }\n\n                    case PieceType.QUEEN:{\n                        image = \"queen\";\n                        break;\n                    }\n                }\n                piece.image = `assets/images/${image}_${teamType}.png`;\n            }\n\n            results.push(piece);\n            return results;\n        }, [] as Piece[])\n        setPieces(updatedPieces);\n        modalRef.current?.classList.add(\"hidden\");\n    }\n\n\n    function promotionTeamType(){\n        return (promotionPawn?.team === TeamType.OUR)?\"w\":\"b\";\n    }\n\n    let board = [];\n\n    for(let y= YAXIS.length-1;y>=0;y--){\n        for(let x=0;x<XAXIS.length;x++){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let img = undefined;\n\n            pieces.forEach(p=> {\n                if(samePosition(p.position, {x:x, y:y})){\n                    img=p.image\n                }\n            })\n\n            let currentPiece = pieces.find(p=> samePosition(p.position,grabPosition));\n            let highlight = (currentPiece?.possibleMoves) ? currentPiece.possibleMoves.some(p=> samePosition(p, {x:x , y:y})): false;\n            \n            board.push(\n                    <Tile key={`${x},${y}`} isEven={isEven} image={img} highlight={highlight}/> \n            )\n        }\n    }       \n\n\n    return(\n        <>\n        <div id=\"pawn-promotion-modal\" className=\"hidden\" ref={modalRef}>\n            <div className=\"modal-body\">\n\n            <img onClick={()=> promotePawn(PieceType.ROOK)} src={`/assets/images/rook_${promotionTeamType()}.png`}/>\n            <img onClick={()=> promotePawn(PieceType.BISHOP)} src={`/assets/images/bishop_${promotionTeamType()}.png`}/>\n            <img onClick={()=> promotePawn(PieceType.KNIGHT)} src={`/assets/images/knight_${promotionTeamType()}.png`}/>\n            <img onClick={()=> promotePawn(PieceType.QUEEN)} src={`/assets/images/queen_${promotionTeamType()}.png`}/>\n            </div>\n        </div>\n\n        <div \n            onMouseMove={(e)=>movePiece(e)} \n            onMouseDown={e=> grabPiece(e)} \n            onMouseUp={(e)=> dropPiece(e)}\n            id=\"chessboard\"\n            ref={chessboardRef}>\n                {board}\n        </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}