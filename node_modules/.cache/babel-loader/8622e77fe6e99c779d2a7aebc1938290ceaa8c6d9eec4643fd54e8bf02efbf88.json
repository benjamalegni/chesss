{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx\",\n  _s = $RefreshSig$();\nimport Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\";\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameComps() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [status, setStatus] = useState(\"offline\");\n  const [roomId, setRoomId] = useState(null);\n  const [myColor, setMyColor] = useState(null);\n  const [joinCode, setJoinCode] = useState(\"\");\n  function ensureSocket() {\n    if (socket && (status === \"waiting\" || status === \"playing\")) return socket;\n    const s = new WebSocket(\"ws://localhost:8080\");\n    s.onmessage = ev => {\n      try {\n        const msg = JSON.parse(ev.data);\n        if (msg.type === \"waiting\") {\n          setStatus(\"waiting\");\n          setRoomId(msg.roomId);\n        } else if (msg.type === \"start\") {\n          setRoomId(msg.roomId);\n          setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n          setStatus(\"playing\");\n        } else if (msg.type === \"opponent_left\") {\n          setStatus(\"offline\");\n          setRoomId(null);\n          setMyColor(null);\n          try {\n            s.close();\n          } catch {}\n        } else if (msg.type === \"room_created\") {\n          setStatus(\"waiting\");\n          setRoomId(msg.roomId);\n        } else if (msg.type === \"error\") {\n          alert(msg.error || \"Error\");\n        }\n      } catch (_e) {\n        // ignore malformed messages\n      }\n    };\n    s.onclose = () => {\n      setStatus(\"offline\");\n      setRoomId(null);\n      setMyColor(null);\n      setSocket(null);\n    };\n    setSocket(s);\n    return s;\n  }\n  function createPrivateRoom() {\n    const s = ensureSocket();\n    if (s.readyState === WebSocket.OPEN) {\n      s.send(JSON.stringify({\n        type: 'create_room'\n      }));\n    } else {\n      s.onopen = () => s.send(JSON.stringify({\n        type: 'create_room'\n      }));\n    }\n  }\n  function joinPrivateRoom() {\n    const code = joinCode.trim();\n    if (!code) return;\n    const s = ensureSocket();\n    const payload = JSON.stringify({\n      type: 'join_room',\n      roomId: code\n    });\n    if (s.readyState === WebSocket.OPEN) {\n      s.send(payload);\n    } else {\n      s.onopen = () => s.send(payload);\n    }\n  }\n  function disconnect() {\n    try {\n      socket === null || socket === void 0 ? void 0 : socket.close();\n    } catch {}\n    setStatus(\"offline\");\n    setRoomId(null);\n    setMyColor(null);\n    setSocket(null);\n  }\n  const online = useMemo(() => ({\n    socket,\n    status,\n    roomId: roomId !== null && roomId !== void 0 ? roomId : undefined,\n    myColor: myColor !== null && myColor !== void 0 ? myColor : undefined\n  }), [socket, status, roomId, myColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"online-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPrivateRoom,\n        disabled: status === \"waiting\" || status === \"playing\",\n        children: \"Create Room (code)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter room code\",\n        value: joinCode,\n        onChange: e => setJoinCode(e.target.value),\n        disabled: status === \"waiting\" || status === \"playing\",\n        style: {\n          marginLeft: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinPrivateRoom,\n        disabled: status === \"waiting\" || status === \"playing\" || !joinCode.trim(),\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), status === \"waiting\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Waiting for opponent... Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this), status === \"playing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Room: \", roomId, \" | You are \", myColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }, this), (status === \"waiting\" || status === \"playing\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      online: online\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n}\n_s(GameComps, \"Qp4gwMvs3+MDikTXBPagWgkG7iw=\");\n_c = GameComps;\nexport default GameComps;\nvar _c;\n$RefreshReg$(_c, \"GameComps\");","map":{"version":3,"names":["Chessboard","LoginComponent","useMemo","useState","jsxDEV","_jsxDEV","GameComps","_s","socket","setSocket","status","setStatus","roomId","setRoomId","myColor","setMyColor","joinCode","setJoinCode","ensureSocket","s","WebSocket","onmessage","ev","msg","JSON","parse","data","type","color","close","alert","error","_e","onclose","createPrivateRoom","readyState","OPEN","send","stringify","onopen","joinPrivateRoom","code","trim","payload","disconnect","online","undefined","id","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","marginLeft","className","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx"],"sourcesContent":["import Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\"\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\n\nfunction GameComps(){\n    const [socket, setSocket] = useState<WebSocket | null>(null);\n    const [status, setStatus] = useState<\"offline\" | \"waiting\" | \"playing\">(\"offline\");\n    const [roomId, setRoomId] = useState<string | null>(null);\n    const [myColor, setMyColor] = useState<\"white\" | \"black\" | null>(null);\n    const [joinCode, setJoinCode] = useState<string>(\"\");\n\n    function ensureSocket(): WebSocket{\n        if(socket && (status === \"waiting\" || status === \"playing\")) return socket;\n        const s = new WebSocket(\"ws://localhost:8080\");\n        s.onmessage = (ev: MessageEvent) => {\n            try{\n                const msg = JSON.parse(ev.data);\n                if(msg.type === \"waiting\"){\n                    setStatus(\"waiting\");\n                    setRoomId(msg.roomId);\n                } else if(msg.type === \"start\"){\n                    setRoomId(msg.roomId);\n                    setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n                    setStatus(\"playing\");\n                } else if(msg.type === \"opponent_left\"){\n                    setStatus(\"offline\");\n                    setRoomId(null);\n                    setMyColor(null);\n                    try{ s.close(); } catch {}\n                } else if(msg.type === \"room_created\"){\n                    setStatus(\"waiting\");\n                    setRoomId(msg.roomId);\n                } else if(msg.type === \"error\"){\n                    alert(msg.error || \"Error\");\n                }\n            }catch(_e){\n                // ignore malformed messages\n            }\n        };\n        s.onclose = () => {\n            setStatus(\"offline\");\n            setRoomId(null);\n            setMyColor(null);\n            setSocket(null);\n        };\n        setSocket(s);\n        return s;\n    }\n\n    function createPrivateRoom(){\n        const s = ensureSocket();\n        if(s.readyState === WebSocket.OPEN){\n            s.send(JSON.stringify({ type: 'create_room' }));\n        } else {\n            s.onopen = () => s.send(JSON.stringify({ type: 'create_room' }));\n        }\n    }\n\n    function joinPrivateRoom(){\n        const code = joinCode.trim();\n        if(!code) return;\n        const s = ensureSocket();\n        const payload = JSON.stringify({ type: 'join_room', roomId: code });\n        if(s.readyState === WebSocket.OPEN){\n            s.send(payload);\n        } else {\n            s.onopen = () => s.send(payload);\n        }\n    }\n\n    function disconnect(){\n        try{ socket?.close(); } catch {}\n        setStatus(\"offline\");\n        setRoomId(null);\n        setMyColor(null);\n        setSocket(null);\n    }\n\n    const online = useMemo(() => ({\n        socket,\n        status,\n        roomId: roomId ?? undefined,\n        myColor: myColor ?? undefined,\n    }), [socket, status, roomId, myColor]);\n\n    return <div id=\"component\">\n        <div id=\"online-controls\">\n            <button onClick={createPrivateRoom} disabled={status === \"waiting\" || status === \"playing\"}>Create Room (code)</button>\n            <input\n                placeholder=\"Enter room code\"\n                value={joinCode}\n                onChange={(e)=> setJoinCode(e.target.value)}\n                disabled={status === \"waiting\" || status === \"playing\"}\n                style={{ marginLeft: 8 }}\n            />\n            <button onClick={joinPrivateRoom} disabled={status === \"waiting\" || status === \"playing\" || !joinCode.trim()}>Join Room</button>\n            {status === \"waiting\" && <span className=\"hint\">Waiting for opponent... Room: {roomId}</span>}\n            {status === \"playing\" && <span className=\"hint\">Room: {roomId} | You are {myColor}</span>}\n            {(status === \"waiting\" || status === \"playing\") && <button onClick={disconnect}>Disconnect</button>}\n        </div>\n        <LoginComponent/>\n        <Chessboard online={online}/>\n    </div>\n}\n\nexport default GameComps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}