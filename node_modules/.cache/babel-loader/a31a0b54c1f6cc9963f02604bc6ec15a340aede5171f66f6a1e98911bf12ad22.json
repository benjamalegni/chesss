{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx\",\n  _s = $RefreshSig$();\nimport Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\";\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameComps() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [status, setStatus] = useState(\"offline\");\n  const [roomId, setRoomId] = useState(null);\n  const [myColor, setMyColor] = useState(null);\n  const [joinCode, setJoinCode] = useState(\"\");\n  function ensureSocket() {\n    if (socket && (status === \"waiting\" || status === \"playing\")) return socket;\n    const s = io(\"http://localhost:8080\", {\n      autoConnect: true\n    });\n    s.on('waiting', msg => {\n      setStatus(\"waiting\");\n      setRoomId(msg.roomId);\n    });\n    s.on('start', msg => {\n      setRoomId(msg.roomId);\n      setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n      setStatus(\"playing\");\n    });\n    s.on('opponent_left', () => {\n      setStatus(\"offline\");\n      setRoomId(null);\n      setMyColor(null);\n      try {\n        s.close();\n      } catch {}\n    });\n    s.on('room_created', msg => {\n      setStatus(\"waiting\");\n      setRoomId(msg.roomId);\n    });\n    s.on('error', msg => {\n      alert((msg === null || msg === void 0 ? void 0 : msg.error) || \"Error\");\n    });\n    s.on('disconnect', () => {\n      setStatus(\"offline\");\n      setRoomId(null);\n      setMyColor(null);\n      setSocket(null);\n    });\n    setSocket(s);\n    return s;\n  }\n  function createPrivateRoom() {\n    const s = ensureSocket();\n    s.emit('create_room');\n  }\n  function joinPrivateRoom() {\n    const code = joinCode.trim();\n    if (!code) return;\n    const s = ensureSocket();\n    s.emit('join_room', {\n      roomId: code\n    });\n  }\n  function disconnect() {\n    try {\n      socket === null || socket === void 0 ? void 0 : socket.close();\n    } catch {}\n    setStatus(\"offline\");\n    setRoomId(null);\n    setMyColor(null);\n    setSocket(null);\n  }\n  const online = useMemo(() => ({\n    socket,\n    status,\n    roomId: roomId !== null && roomId !== void 0 ? roomId : undefined,\n    myColor: myColor !== null && myColor !== void 0 ? myColor : undefined\n  }), [socket, status, roomId, myColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"online-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPrivateRoom,\n        disabled: status === \"waiting\" || status === \"playing\",\n        children: \"Create Room (code)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter room code\",\n        value: joinCode,\n        onChange: e => setJoinCode(e.target.value),\n        disabled: status === \"waiting\" || status === \"playing\",\n        style: {\n          marginLeft: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinPrivateRoom,\n        disabled: status === \"waiting\" || status === \"playing\" || !joinCode.trim(),\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), status === \"waiting\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Waiting for opponent... Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 38\n      }, this), status === \"playing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Room: \", roomId, \" | You are \", myColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this), (status === \"waiting\" || status === \"playing\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      online: online\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n}\n_s(GameComps, \"Qp4gwMvs3+MDikTXBPagWgkG7iw=\");\n_c = GameComps;\nexport default GameComps;\nvar _c;\n$RefreshReg$(_c, \"GameComps\");","map":{"version":3,"names":["Chessboard","LoginComponent","useMemo","useState","io","jsxDEV","_jsxDEV","GameComps","_s","socket","setSocket","status","setStatus","roomId","setRoomId","myColor","setMyColor","joinCode","setJoinCode","ensureSocket","s","autoConnect","on","msg","color","close","alert","error","createPrivateRoom","emit","joinPrivateRoom","code","trim","disconnect","online","undefined","id","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","marginLeft","className","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx"],"sourcesContent":["import Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\"\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\nimport { io, Socket } from 'socket.io-client';\n\nfunction GameComps(){\n    const [socket, setSocket] = useState<Socket | null>(null);\n    const [status, setStatus] = useState<\"offline\" | \"waiting\" | \"playing\">(\"offline\");\n    const [roomId, setRoomId] = useState<string | null>(null);\n    const [myColor, setMyColor] = useState<\"white\" | \"black\" | null>(null);\n    const [joinCode, setJoinCode] = useState<string>(\"\");\n\n    function ensureSocket(): Socket{\n        if(socket && (status === \"waiting\" || status === \"playing\")) return socket;\n        const s = io(\"http://localhost:8080\", { autoConnect: true });\n        s.on('waiting', (msg: any) => {\n            setStatus(\"waiting\");\n            setRoomId(msg.roomId);\n        });\n        s.on('start', (msg: any) => {\n            setRoomId(msg.roomId);\n            setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n            setStatus(\"playing\");\n        });\n        s.on('opponent_left', () => {\n            setStatus(\"offline\");\n            setRoomId(null);\n            setMyColor(null);\n            try{ s.close(); } catch {}\n        });\n        s.on('room_created', (msg: any) => {\n            setStatus(\"waiting\");\n            setRoomId(msg.roomId);\n        });\n        s.on('error', (msg: any) => {\n            alert(msg?.error || \"Error\");\n        });\n        s.on('disconnect', () => {\n            setStatus(\"offline\");\n            setRoomId(null);\n            setMyColor(null);\n            setSocket(null);\n        });\n        setSocket(s);\n        return s;\n    }\n\n    function createPrivateRoom(){\n        const s = ensureSocket();\n        s.emit('create_room');\n    }\n\n    function joinPrivateRoom(){\n        const code = joinCode.trim();\n        if(!code) return;\n        const s = ensureSocket();\n        s.emit('join_room', { roomId: code });\n    }\n\n    function disconnect(){\n        try{ socket?.close(); } catch {}\n        setStatus(\"offline\");\n        setRoomId(null);\n        setMyColor(null);\n        setSocket(null);\n    }\n\n    const online = useMemo(() => ({\n        socket,\n        status,\n        roomId: roomId ?? undefined,\n        myColor: myColor ?? undefined,\n    }), [socket, status, roomId, myColor]);\n\n    return <div id=\"component\">\n        <div id=\"online-controls\">\n            <button onClick={createPrivateRoom} disabled={status === \"waiting\" || status === \"playing\"}>Create Room (code)</button>\n            <input\n                placeholder=\"Enter room code\"\n                value={joinCode}\n                onChange={(e)=> setJoinCode(e.target.value)}\n                disabled={status === \"waiting\" || status === \"playing\"}\n                style={{ marginLeft: 8 }}\n            />\n            <button onClick={joinPrivateRoom} disabled={status === \"waiting\" || status === \"playing\" || !joinCode.trim()}>Join Room</button>\n            {status === \"waiting\" && <span className=\"hint\">Waiting for opponent... Room: {roomId}</span>}\n            {status === \"playing\" && <span className=\"hint\">Room: {roomId} | You are {myColor}</span>}\n            {(status === \"waiting\" || status === \"playing\") && <button onClick={disconnect}>Disconnect</button>}\n        </div>\n        <LoginComponent/>\n        <Chessboard online={online}/>\n    </div>\n}\n\nexport default GameComps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}