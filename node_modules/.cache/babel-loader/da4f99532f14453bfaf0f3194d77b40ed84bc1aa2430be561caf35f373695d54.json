{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx\",\n  _s = $RefreshSig$();\nimport Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\";\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameComps() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [status, setStatus] = useState(\"offline\");\n  const [roomId, setRoomId] = useState(null);\n  const [myColor, setMyColor] = useState(null);\n  function connectAnd(mode) {\n    if (socket && (status === \"waiting\" || status === \"playing\")) return;\n    const s = new WebSocket(\"ws://localhost:8080\");\n    s.onopen = () => {\n      s.send(JSON.stringify({\n        type: mode\n      }));\n    };\n    s.onmessage = ev => {\n      try {\n        const msg = JSON.parse(ev.data);\n        if (msg.type === \"waiting\") {\n          setStatus(\"waiting\");\n          setRoomId(msg.roomId);\n        } else if (msg.type === \"start\") {\n          setStatus(\"playing\");\n          setRoomId(msg.roomId);\n          setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n        } else if (msg.type === \"opponent_left\") {\n          setStatus(\"offline\");\n          setRoomId(null);\n          setMyColor(null);\n          try {\n            s.close();\n          } catch {}\n        }\n      } catch (_e) {\n        // ignore malformed messages\n      }\n    };\n    s.onclose = () => {\n      setStatus(\"offline\");\n      setRoomId(null);\n      setMyColor(null);\n      setSocket(null);\n    };\n    setSocket(s);\n  }\n  function createGame() {\n    connectAnd(\"create\");\n  }\n  function findMatch() {\n    connectAnd(\"find\");\n  }\n  function disconnect() {\n    try {\n      socket === null || socket === void 0 ? void 0 : socket.close();\n    } catch {}\n    setStatus(\"offline\");\n    setRoomId(null);\n    setMyColor(null);\n    setSocket(null);\n  }\n  const online = useMemo(() => ({\n    socket,\n    status,\n    roomId: roomId !== null && roomId !== void 0 ? roomId : undefined,\n    myColor: myColor !== null && myColor !== void 0 ? myColor : undefined\n  }), [socket, status, roomId, myColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"online-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createGame,\n        disabled: status === \"waiting\" || status === \"playing\",\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findMatch,\n        disabled: status === \"waiting\" || status === \"playing\",\n        children: \"Find Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), status === \"waiting\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Waiting for opponent... Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this), status === \"playing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint\",\n        children: [\"Room: \", roomId, \" | You are \", myColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }, this), (status === \"waiting\" || status === \"playing\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      online: online\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(GameComps, \"I9mxDEqOdshFivWX5jkT6joX9rw=\");\n_c = GameComps;\nexport default GameComps;\nvar _c;\n$RefreshReg$(_c, \"GameComps\");","map":{"version":3,"names":["Chessboard","LoginComponent","useMemo","useState","jsxDEV","_jsxDEV","GameComps","_s","socket","setSocket","status","setStatus","roomId","setRoomId","myColor","setMyColor","connectAnd","mode","s","WebSocket","onopen","send","JSON","stringify","type","onmessage","ev","msg","parse","data","color","close","_e","onclose","createGame","findMatch","disconnect","online","undefined","id","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chesss/src/components/GameComps/GameComps.tsx"],"sourcesContent":["import Chessboard from \"../Chessboard/Chessboard\";\nimport \"./GameComps.css\"\nimport LoginComponent from \"../../Login/LoginComponent\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nfunction GameComps(){\n    const [socket, setSocket] = useState<WebSocket | null>(null);\n    const [status, setStatus] = useState<\"offline\" | \"waiting\" | \"playing\">(\"offline\");\n    const [roomId, setRoomId] = useState<string | null>(null);\n    const [myColor, setMyColor] = useState<\"white\" | \"black\" | null>(null);\n\n    function connectAnd(mode: \"create\" | \"find\"){        \n        if(socket && (status === \"waiting\" || status === \"playing\")) return;\n        const s = new WebSocket(\"ws://localhost:8080\");\n        s.onopen = () => {\n            s.send(JSON.stringify({ type: mode }));\n        };\n        s.onmessage = (ev: MessageEvent) => {\n            try{\n                const msg = JSON.parse(ev.data);\n                if(msg.type === \"waiting\"){\n                    setStatus(\"waiting\");\n                    setRoomId(msg.roomId);\n                } else if(msg.type === \"start\"){\n                    setStatus(\"playing\");\n                    setRoomId(msg.roomId);\n                    setMyColor(msg.color === \"white\" ? \"white\" : \"black\");\n                } else if(msg.type === \"opponent_left\"){\n                    setStatus(\"offline\");\n                    setRoomId(null);\n                    setMyColor(null);\n                    try{ s.close(); } catch {}\n                }\n            }catch(_e){\n                // ignore malformed messages\n            }\n        };\n        s.onclose = () => {\n            setStatus(\"offline\");\n            setRoomId(null);\n            setMyColor(null);\n            setSocket(null);\n        };\n        setSocket(s);\n    }\n\n    function createGame(){\n        connectAnd(\"create\");\n    }\n\n    function findMatch(){\n        connectAnd(\"find\");\n    }\n\n    function disconnect(){\n        try{ socket?.close(); } catch {}\n        setStatus(\"offline\");\n        setRoomId(null);\n        setMyColor(null);\n        setSocket(null);\n    }\n\n    const online = useMemo(() => ({\n        socket,\n        status,\n        roomId: roomId ?? undefined,\n        myColor: myColor ?? undefined,\n    }), [socket, status, roomId, myColor]);\n\n    return <div id=\"component\">\n        <div id=\"online-controls\">\n            <button onClick={createGame} disabled={status === \"waiting\" || status === \"playing\"}>Create Game</button>\n            <button onClick={findMatch} disabled={status === \"waiting\" || status === \"playing\"}>Find Match</button>\n            {status === \"waiting\" && <span className=\"hint\">Waiting for opponent... Room: {roomId}</span>}\n            {status === \"playing\" && <span className=\"hint\">Room: {roomId} | You are {myColor}</span>}\n            {(status === \"waiting\" || status === \"playing\") && <button onClick={disconnect}>Disconnect</button>}\n        </div>\n        <LoginComponent/>\n        <Chessboard online={online}/>\n    </div>\n}\n\nexport default GameComps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}